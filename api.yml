# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started. Please delete this endpoint.
      operationId: hello
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          $ref: "#/components/responses/HelloResponse"
        '404':
          $ref: "#/components/responses/ErrorResponse"
  /registration:
    post:
      summary: Register a new user to the system
      operationId: registerUser
      requestBody:
        $ref: "#/components/requestBodies/RegistrationRequest"
      responses:
        '201':
          $ref: "#/components/responses/RegistrationResponse"
        '400':
          $ref: "#/components/responses/ErrorResponse"
        '500':
          $ref: "#/components/responses/ErrorResponse"
  /login:
    post:
        summary: Login to the system
        operationId: loginUser
        requestBody:
          $ref: "#/components/requestBodies/LoginRequest"
        responses:
          '200':
            $ref: "#/components/responses/LoginResponse"
          '400':
            $ref: "#/components/responses/ErrorResponse"
          '404':
            $ref: "#/components/responses/ErrorResponse"
          '500':
            $ref: "#/components/responses/ErrorResponse"
  /profile:
    get:
      summary: Get user profile
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
          '200':
            $ref: "#/components/responses/ProfileResponse"
          '400':
            $ref: "#/components/responses/ErrorResponse"
          '403':
            $ref: "#/components/responses/ErrorResponse"
          '404':
            $ref: "#/components/responses/ErrorResponse"
          '500':
            $ref: "#/components/responses/ErrorResponse"
    patch:
      summary: Update user profile
      operationId: patchUserProfile
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/UpdateUserProfileRequest"
      responses:
        '204':
            description: User profile updated
        '400':
          $ref: "#/components/responses/ErrorResponse"
        '403':
          $ref: "#/components/responses/ErrorResponse"
        '404':
          $ref: "#/components/responses/ErrorResponse"
        '409':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: "#/components/responses/ErrorResponse"


components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT

  parameters:
    Authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string

  requestBodies:
    RegistrationRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegistrationRequest"
      required: true
    LoginRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginRequest"
      required: true
    UpdateUserProfileRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateUserProfileRequest"
      required: true

  responses:
    HelloResponse:
      description: Test return
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HelloResponse"
    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    RegistrationResponse:
      description: New user created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegistrationResponse"
    LoginResponse:
      description: Response after user login - return JWT token
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginResponse"
    ProfileResponse:
      description: Return authenticated user profile
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProfileResponse"

  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    RegistrationRequest:
      type: object
      properties:
        phone_number:
          type: string
          minLength: 10
          maxLength: 13
          pattern: '^\+62\d*$'
        full_name:
          type: string
          minLength: 3
          maxLength: 60
        password:
          type: string
          minLength: 6
          maxLength: 64
      required:
        - phone_number
        - full_name
        - password
    RegistrationResponse:
      type: object
      properties:
        user_id:
          type: string
      required:
        - user_id
    LoginRequest:
      type: object
      properties:
        phone_number:
          type: string
        password:
          type: string
      required:
        - phone_number
        - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    ProfileResponse:
      type: object
      properties:
        full_name:
          type: string
        phone_number:
          type: string
      required:
        - full_name
        - phone_number
    UpdateUserProfileRequest:
      type: object
      properties:
        full_name:
          type: string
          minLength: 3
          maxLength: 60
        phone_number:
          type: string
          minLength: 10
          maxLength: 13
          pattern: '^\+62\d*$'